What happens when you initialize a repository? Why do you need to do it?

A .git directory is created.  This is where the files are hidden to track the
status of the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area are files that will be added to the repository but haven't
been committed yet.  It allows for files to be worked on before those changes
are committed.

How can you use the staging area to make sure you have one commit per logical change?

By only adding the files to staging that were changed as part of why you're
commiting.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would help with the introduction of a major feature or a major change
to the version or even when just testing out different things that you don't
necessarily want to break the master code.  They would help because you don't
have to worry that something will be majorly wrong with the main code.

How do the diagrams help you visualize the branch structure?

The diagrams make it easy to see what commits are accessible from the current
branch since you can just follow it back as a straight line.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merge combines all the changes in one branch in to another branch.  It's
represented in the diagram the way it is because all commits made in both
branches are accessible after the merge.
